import { useState } from "react";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
} from "@/components/ui/card";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import VerseCard from "@/components/VerseCard";
import { useToast } from "@/components/ui/use-toast";

// Sample moods with associated icons and descriptions
const moods = [
  {
    id: "anxious",
    name: "Anxious",
    icon: "ЁЯШЯ",
    color: "bg-yellow-100 dark:bg-yellow-900/30",
    description: "Feeling worried or uneasy"
  },
  {
    id: "peaceful",
    name: "Peaceful",
    icon: "ЁЯШМ",
    color: "bg-blue-100 dark:bg-blue-900/30",
    description: "Feeling calm and centered"
  },
  {
    id: "confused",
    name: "Confused",
    icon: "ЁЯШХ",
    color: "bg-purple-100 dark:bg-purple-900/30",
    description: "Seeking clarity or direction"
  },
  {
    id: "motivated",
    name: "Motivated",
    icon: "ЁЯТк",
    color: "bg-green-100 dark:bg-green-900/30",
    description: "Ready to take action"
  },
  {
    id: "sad",
    name: "Sad",
    icon: "ЁЯШв",
    color: "bg-blue-100 dark:bg-blue-900/30",
    description: "Feeling down or sorrowful"
  },
  {
    id: "joyful",
    name: "Joyful",
    icon: "ЁЯШД",
    color: "bg-orange-100 dark:bg-orange-900/30",
    description: "Experiencing happiness"
  },
  {
    id: "fearful",
    name: "Fearful",
    icon: "ЁЯШи",
    color: "bg-red-100 dark:bg-red-900/30",
    description: "Confronting fears or worries"
  },
  {
    id: "grateful",
    name: "Grateful",
    icon: "ЁЯЩП",
    color: "bg-green-100 dark:bg-green-900/30",
    description: "Feeling thankful"
  },
];

// Sample verses for each mood (in a real app, these would come from an API)
const moodVerses: Record<string, any[]> = {
  anxious: [
    {
      chapter: 2,
      verse: 14,
      slok: "рдорд╛рддреНрд░рд╛рд╕реНрдкрд░реНрд╢рд╛рд╕реНрддреБ рдХреМрдиреНрддреЗрдп рд╢реАрддреЛрд╖реНрдгрд╕реБрдЦрджреБрдГрдЦрджрд╛рдГред рдЖрдЧрдорд╛рдкрд╛рдпрд┐рдиреЛрд╜рдирд┐рддреНрдпрд╛рд╕реНрддрд╛рдВрд╕реНрддрд┐рддрд┐рдХреНрд╖рд╕реНрд╡ рднрд╛рд░рддрее",
      transliteration: "m─Бtr─Б-spar┼Ы─Бs tu kaunteya ┼Ы─лtoс╣гс╣Зa-sukha-duс╕еkha-d─Бс╕е ─Бgam─Бp─Бyino 'nity─Бs t─Бс╣Бs titikс╣гasva bh─Бrata",
      translation: "O son of Kunti, the nonpermanent appearance of happiness and distress, and their disappearance in due course, are like the appearance and disappearance of winter and summer seasons. They arise from sense perception, O scion of Bharata, and one must learn to tolerate them without being disturbed."
    },
    {
      chapter: 6,
      verse: 27,
      slok: "рдкреНрд░рд╢рд╛рдиреНрддрдордирд╕рдВ рд╣реНрдпреЗрдирдВ рдпреЛрдЧрд┐рдирдВ рд╕реБрдЦрдореБрддреНрддрдордореНред рдЙрдкреИрддрд┐ рд╢рд╛рдиреНрддрд░рдЬрд╕рдВ рдмреНрд░рд╣реНрдорднреВрддрдордХрд▓реНрдорд╖рдореНрее",
      transliteration: "pra┼Ы─Бnta-manasaс╣Б hy enaс╣Б yoginaс╣Б sukham uttamam upaiti ┼Ы─Бnta-rajasaс╣Б brahma-bh┼лtam akalmaс╣гam",
      translation: "The yogi whose mind is fixed on Me verily attains the highest happiness. By virtue of his identity with Brahman, he is liberated; his mind is peaceful, his passions are quieted, and he is freed from sin."
    }
  ],
  peaceful: [
    {
      chapter: 2,
      verse: 70,
      slok: "рдЖрдкреВрд░реНрдпрдорд╛рдгрдордЪрд▓рдкреНрд░рддрд┐рд╖реНрдардВ рд╕рдореБрджреНрд░рдорд╛рдкрдГ рдкреНрд░рд╡рд┐рд╢рдиреНрддрд┐ рдпрджреНрд╡рддреНред рддрджреНрд╡рддреНрдХрд╛рдорд╛ рдпрдВ рдкреНрд░рд╡рд┐рд╢рдиреНрддрд┐ рд╕рд░реНрд╡реЗ рд╕ рд╢рд╛рдиреНрддрд┐рдорд╛рдкреНрдиреЛрддрд┐ рди рдХрд╛рдордХрд╛рдореАрее",
      transliteration: "─Бp┼лryam─Бс╣Зam acala-pratiс╣гс╣нhaс╣Б samudram ─Бpaс╕е pravi┼Ыanti yadvat tadvat k─Бm─Б yaс╣Б pravi┼Ыanti sarve sa ┼Ы─Бntim ─Бpnoti na k─Бma-k─Бm─л",
      translation: "A person who is not disturbed by the incessant flow of desiresтАФthat enter like rivers into the ocean, which is ever being filled but is always stillтАФcan alone achieve peace, and not the man who strives to satisfy such desires."
    }
  ],
  confused: [
    {
      chapter: 4,
      verse: 42,
      slok: "рддрд╕реНрдорд╛рджрдЬреНрдЮрд╛рдирд╕рдореНрднреВрддрдВ рд╣реГрддреНрд╕реНрдердВ рдЬреНрдЮрд╛рдирд╛рд╕рд┐рдирд╛рддреНрдордирдГред рдЫрд┐рддреНрддреНрд╡реИрдирдВ рд╕рдВрд╢рдпрдВ рдпреЛрдЧрдорд╛рддрд┐рд╖реНрдареЛрддреНрддрд┐рд╖реНрда рднрд╛рд░рддрее",
      transliteration: "tasm─Бd aj├▒─Бna-sambh┼лtaс╣Б hс╣Ыt-sthaс╣Б j├▒─Бn─Бsin─Бtmanaс╕е chittvainaс╣Б saс╣Б┼Ыayaс╣Б yogam ─Бtiс╣гс╣нhottiс╣гс╣нha bh─Бrata",
      translation: "Therefore the doubts which have arisen in your heart out of ignorance should be slashed by the weapon of knowledge. Armed with yoga, O Bharata, stand and fight."
    }
  ],
  motivated: [
    {
      chapter: 2,
      verse: 47,
      slok: "рдХрд░реНрдордгреНрдпреЗрд╡рд╛рдзрд┐рдХрд╛рд░рд╕реНрддреЗ рдорд╛ рдлрд▓реЗрд╖реБ рдХрджрд╛рдЪрдиред рдорд╛ рдХрд░реНрдордлрд▓рд╣реЗрддреБрд░реНрднреВрд░реНрдорд╛ рддреЗ рд╕рдЩреНрдЧреЛрд╜рд╕реНрддреНрд╡рдХрд░реНрдордгрд┐рее",
      transliteration: "karmaс╣Зy ev─Бdhik─Бras te m─Б phaleс╣гu kad─Бcana m─Б karma-phala-hetur bh┼лr m─Б te saс╣Еgo 'stv akarmaс╣Зi",
      translation: "You have a right to perform your prescribed duties, but you are not entitled to the fruits of your actions. Never consider yourself to be the cause of the results of your activities, nor be attached to inaction."
    }
  ],
  sad: [
    {
      chapter: 2,
      verse: 22,
      slok: "рд╡рд╛рд╕рд╛рдВрд╕рд┐ рдЬреАрд░реНрдгрд╛рдирд┐ рдпрдерд╛ рд╡рд┐рд╣рд╛рдп рдирд╡рд╛рдирд┐ рдЧреГрд╣реНрдгрд╛рддрд┐ рдирд░реЛрд╜рдкрд░рд╛рдгрд┐ред рддрдерд╛ рд╢рд░реАрд░рд╛рдгрд┐ рд╡рд┐рд╣рд╛рдп рдЬреАрд░реНрдгрд╛рдиреНрдпрдиреНрдпрд╛рдирд┐ рд╕рдВрдпрд╛рддрд┐ рдирд╡рд╛рдирд┐ рджреЗрд╣реАрее",
      transliteration: "v─Бs─Бс╣Бsi j─лrс╣З─Бni yath─Б vih─Бya nav─Бni gс╣Ыhс╣З─Бti naro 'par─Бс╣Зi tath─Б ┼Ыar─лr─Бс╣Зi vih─Бya j─лrс╣З─Бny any─Бni saс╣Бy─Бti nav─Бni deh─л",
      translation: "As a person puts on new garments, giving up old ones, similarly, the soul accepts new material bodies, giving up the old and useless ones."
    }
  ],
  fearful: [
    {
      chapter: 2,
      verse: 40,
      slok: "рдиреЗрд╣рд╛рднрд┐рдХреНрд░рдордирд╛рд╢реЛрд╜рд╕реНрддрд┐ рдкреНрд░рддреНрдпрд╡рд╛рдпреЛ рди рд╡рд┐рджреНрдпрддреЗред рд╕реНрд╡рд▓реНрдкрдордкреНрдпрд╕реНрдп рдзрд░реНрдорд╕реНрдп рддреНрд░рд╛рдпрддреЗ рдорд╣рддреЛ рднрдпрд╛рддреНрее",
      transliteration: "neh─Бbhikrama-n─Б┼Ыo 'sti pratyav─Бyo na vidyate sv-alpam apy asya dharmasya tr─Бyate mahato bhay─Бt",
      translation: "In this endeavor there is no loss or diminution, and a little advancement on this path can protect one from the most dangerous type of fear."
    }
  ],
  joyful: [
    {
      chapter: 5,
      verse: 21,
      slok: "рдмрд╛рд╣реНрдпрд╕реНрдкрд░реНрд╢реЗрд╖реНрд╡рд╕рдХреНрддрд╛рддреНрдорд╛ рд╡рд┐рдиреНрджрддреНрдпрд╛рддреНрдордирд┐ рдпрддреНрд╕реБрдЦрдореНред рд╕ рдмреНрд░рд╣реНрдордпреЛрдЧрдпреБрдХреНрддрд╛рддреНрдорд╛ рд╕реБрдЦрдордХреНрд╖рдпрдорд╢реНрдиреБрддреЗрее",
      transliteration: "b─Бhya-spar┼Ыeс╣гv asakt─Бtm─Б vindaty ─Бtmani yat sukham sa brahma-yoga-yukt─Бtm─Б sukham akс╣гayam a┼Ыnute",
      translation: "Such a liberated person is not attracted to material sense pleasure or external objects but is always in trance, enjoying the pleasure within. In this way the self-realized person enjoys unlimited happiness, for he concentrates on the Supreme."
    }
  ],
  grateful: [
    {
      chapter: 9,
      verse: 26,
      slok: "рдкрддреНрд░рдВ рдкреБрд╖реНрдкрдВ рдлрд▓рдВ рддреЛрдпрдВ рдпреЛ рдореЗ рднрдХреНрддреНрдпрд╛ рдкреНрд░рдпрдЪреНрдЫрддрд┐ред рддрджрд╣рдВ рднрдХреНрддреНрдпреБрдкрд╣реГрддрдорд╢реНрдирд╛рдорд┐ рдкреНрд░рдпрддрд╛рддреНрдордирдГрее",
      transliteration: "patraс╣Б puс╣гpaс╣Б phalaс╣Б toyaс╣Б yo me bhakty─Б prayacchati tad ahaс╣Б bhakty-upahс╣Ыtam a┼Ыn─Бmi prayat─Бtmanaс╕е",
      translation: "If one offers Me with love and devotion a leaf, a flower, a fruit, or water, I will accept it."
    }
  ]
};

export function MoodSelection() {
  const [selectedMood, setSelectedMood] = useState<string | null>(null);
  const [showDialog, setShowDialog] = useState(false);
  const [recommendations, setRecommendations] = useState<any[]>([]);
  const [isLoading, setIsLoading] = useState(false); // Added loading state
  const { toast } = useToast();

  const handleMoodSelect = (moodId: string) => {
    setSelectedMood(moodId);
    setIsLoading(true); // Set loading state to true
    setRecommendations([]); // Reset recommendations before fetching
    setTimeout(() => { // Simulate API call delay. Replace with actual API call in a real app.
      setRecommendations(moodVerses[moodId] || []);
      setIsLoading(false); // Set loading state to false after fetching
    }, 500);
  };

  return (
    <div>
      <div className="grid grid-cols-2 sm:grid-cols-4 gap-4">
        {moods.map((mood) => (
          <Button
            key={mood.id}
            variant="outline"
            className={`h-auto flex flex-col items-center p-4 hover:bg-primary/5 transition-colors ${
              selectedMood === mood.id ? "ring-2 ring-primary" : ""
            }`}
            onClick={() => handleMoodSelect(mood.id)}
          >
            <span className="text-4xl mb-2">{mood.icon}</span>
            <span className="font-medium">{mood.name}</span>
            <span className="text-xs text-muted-foreground mt-1">{mood.description}</span>
          </Button>
        ))}
      </div>

      <Dialog open={showDialog} onOpenChange={setShowDialog}>
        <DialogContent className="sm:max-w-[600px]">
          <DialogHeader>
            <DialogTitle className="text-2xl">
              {selectedMood && moods.find(m => m.id === selectedMood)?.icon}{' '}
              Verses for {selectedMood && moods.find(m => m.id === selectedMood)?.name} Moments
            </DialogTitle>
            <DialogDescription>
              Here are verses from the Bhagavad Gita to guide you through this emotional state
            </DialogDescription>
          </DialogHeader>

          <div className="space-y-4 my-4">
            {isLoading ? ( // Added loading indicator
              <Card>
                <CardContent className="py-8 text-center">
                  <p>Loading verses...</p>
                </CardContent>
              </Card>
            ) : recommendations.length > 0 ? (
              recommendations.map((verse, i) => (
                <VerseCard
                  key={i}
                  chapter={verse.chapter}
                  verse={verse.verse}
                  slok={verse.slok}
                  transliteration={verse.transliteration}
                  translation={verse.translation}
                />
              ))
            ) : (
              <Card>
                <CardContent className="py-8 text-center">
                  <p className="text-muted-foreground">
                    No specific verses found for this mood. Try another mood or browse all chapters.
                  </p>
                </CardContent>
              </Card>
            )}
          </div>

          <div className="flex justify-between">
            <Button
              variant="outline"
              onClick={() => {
                toast({
                  title: "Verse saved",
                  description: "This verse has been saved to your favorites.",
                });
              }}
            >
              Save to Favorites
            </Button>
            <Button onClick={() => setShowDialog(false)}>Close</Button>
          </div>
        </DialogContent>
      </Dialog>
    </div>
  );
}